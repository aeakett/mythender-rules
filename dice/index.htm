<!doctype html>
<html class="no-js" lang="">
<head>
   <meta charset="utf-8">
   <meta http-equiv="X-UA-Compatible" content="IE=edge">
   <title>Mythender dice roller</title>
   <meta name="description" content="">
   <meta name="viewport" content="width=device-width, initial-scale=1">
   <link rel="stylesheet" href="css/main.css">
   <link rel="stylesheet" href="css/animate.min.css">
   <link rel="stylesheet" href="css/jquery-ui.min.css">
</head>
<body>

<div id="accordion">
   <h3>Status</h3>
   <div id="status">
      <div>Might: <input id="might" name="might" type="number" min="0" inputmode="numeric" pattern="[0-9]*"></div>
      <div>Lighting: <input id="lightning" name="lightning" type="number" min="0" inputmode="numeric" pattern="[0-9]*"></div>
      <div>Thunder: <input id="thunder" name="thunder" type="number" min="0" inputmode="numeric" pattern="[0-9]*"></div>
      <div>Storm: <input id="storm" name="storm" type="number" min="0" inputmode="numeric" pattern="[0-9]*"></div>
      <div id="woundTrack">Wounds: <input id="woundNo" name="woundNo" type="number" min="0" inputmode="numeric" pattern="[0-9]*"></div>
      <div>Wound cost:<input id="woundCost" name="woundCost" type="number" min="0" inputmode="numeric" pattern="[0-9]*"></div>
      <table id="wpns">
         <tr><th colspan="3">Weapons</th><th id="wpdDrnBns1">+3 dice</th><th id="wpdDrnBns2">+2 dice</th><th id="wpdDrnBns3">+2 might</th></tr>
         <tr id="wpn1">
            <td id="wpn1name" colspan="3"><input><span class="isMyWeapon">&hellip;is my weapon</span></td>
            <td rowspan="2"><div id="wpn1cd1"></div></td>
            <td rowspan="2"><div id="wpn1cd2"></div></td>
            <td rowspan="2"><div id="wpn1cd3"></div></td>
         </tr>
         <tr id="wpn1type">
            <td><span id="wpn1int"> intrinsic</span></td>
            <td><span id="wpn1rel"> relic</span></td>
            <td><span id="wpn1cmp"> companion</span></td>
         </tr>
         <tr id="wpn2">
            <td id="wpn2name" colspan="3"><input><span class="isMyWeapon">&hellip;is my weapon</span></td>
            <td rowspan="2"><div id="wpn2cd1"></div></td>
            <td rowspan="2"><div id="wpn2cd2"></div></td>
            <td rowspan="2"><div id="wpn2cd3"></div></td>
         </tr>
         <tr id="wpn2type">
            <td><span id="wpn2int"> intrinsic</span></td>
            <td><span id="wpn2rel"> relic</span></td>
            <td><span id="wpn2cmp"> companion</span></td>
         </tr>
         <tr id="wpn3">
            <td id="wpn3name" colspan="3"><input><span class="isMyWeapon">&hellip;is my weapon</span></td>
            <td rowspan="2"><div id="wpn3cd1"></div></td>
            <td rowspan="2"><div id="wpn3cd2"></div></td>
            <td rowspan="2"><div id="wpn3cd3"></div></td>
         </tr>
         <tr id="wpn3type">
            <td><span id="wpn3int"> intrinsic</span></td>
            <td><span id="wpn3rel"> relic</span></td>
            <td><span id="wpn3cmp"> companion</span></td>
         </tr>
      </table>
      <div>
         Gifts: <span id="giftList"></span>
         <button id="addGiftButton">+</button>
         <select id="addGiftSelect" name="addGiftSelect" class="hidden">
            <option></option>
            <option value="blazeOfGlory">Blaze of Glory</option>
            <option value="bloodlust">Bloodlust</option>
            <option value="bloodlust-dangerous">Bloodlust - Dangerous</option>
            <option value="bloodlust-quick">Bloodlust - Quick</option>
            <option value="channeledHatred">Channeled Hatred</option>
            <option value="dualWield">Dual Wield</option>
            <option value="fastStrike">Fast Strike</option>
            <option value="focusedOnslaught">Focused Onslaught</option>
            <option value="grievousHarm">Grievous Harm</option>
            <option value="grievousHarm-vicious">Grievous Harm - Vicious</option>
            <option value="grievousHarm-precise">Grievous Harm - Precise</option>
            <option value="grievousHarmaiding">Grievous Harm - Aiding</option>
            <option value="harbingerOfStorm">Harbinger of Storm</option>
            <option value="harbingerOfStorm-raging">Harbinger of Storm - Raging</option>
            <option value="harbingerOfStorm-surging">Harbinger of Storm - Surging</option>
            <option value="masterTactician">Master Tactician</option>
            <option value="mightyPresence">Mighty Presence</option>
            <option value="relentlessness">Relentlessness</option>
            <option value="relentlessness-aiding">Relentlessness - Aiding</option>
            <option value="relentlessness-unrepentant">Relentlessness - Unrepentant</option>
            <option value="sureness">Sureness</option>
            <option value="sureness-precise">Sureness - Precise</option>
            <option value="sureness-quick">Sureness - Quick</option>
            <option value="sureness-unyielding">Sureness - Unyielding</option>
            <option value="surgeOfMight">Surge of Might</option>
            <option value="swiftness">Swiftness</option>
            <option value="swiftness-aiding">Swiftness - Aiding</option>
            <option value="swiftness-quick">Swiftness - Quick</option>
            <option value="swiftness-bloody">Swiftness - Bloody</option>
         </select>
         <button id="addGiftAddButton" class="hidden">Add</button>
         <button id="delGiftButton">-</button>
         <select id="delGiftSelect" name="delGiftSelect" class="hidden"></select>
         <button id="delGiftRemoveButton" class="hidden">Remove</button>
      </div>
   </div>

   <h3>Legendary Action<a title="This is a regular... awesome action" class="accordianExplanation">?</a></h3>
   <div id="legendary">
      <label for="lStorm">Storm</label><br>
      <input id="lStorm" name="lStorm" type="number" min="0" inputmode="numeric" pattern="[0-9]*" /><br>
      <label for="lThunder">Thunder</label><br>
      <input id="lThunder" name="lThunder" type="number" min="0" inputmode="numeric" pattern="[0-9]*" /><br>
      <label for="lBStorm">bonus Storm</label><br>
      <input id="lBStorm" name="lBStorm" type="number" min="0" inputmode="numeric" pattern="[0-9]*" value="0" /><br>
      <label for="lBThunder">bonus Thunder</label><br>
      <input id="lBThunder" name="lBThunder" type="number" min="0" inputmode="numeric" pattern="[0-9]*" value="0" /><br>
      <button id="lRoll">Roll</button>
      <div id="lStormResult"></div>
      <div id="lThunderResult"></div>
      <button id="lRollResultsReset" class="hidden">OK</button>
   </div>

   <h3>Mythic Action<a title="A super-human, awesome action" class="accordianExplanation">?</a></h3>
   <div id="mythic">
      <label for="mStorm">Storm</label><br>
      <input id="mStorm" name="mStorm" type="number" min="0" inputmode="numeric" pattern="[0-9]*" /><br>
      <label for="mThunder">Thunder</label><br>
      <input id="mThunder" name="mThunder" type="number" min="0" inputmode="numeric" pattern="[0-9]*" /><br>
      <label for="mBStorm">bonus Storm</label><br>
      <input id="mBStorm" name="mBStorm" type="number" min="0" inputmode="numeric" pattern="[0-9]*" /><br>
      <label for="mBThunder">bonus Thunder</label><br>
      <input id="mBThunder" name="mBThunder" type="number" min="0" inputmode="numeric" pattern="[0-9]*" /><br>
      <button id="mRoll">Roll</button>
      <div id="mStormResult"></div>
      <div id="mThunderResult"></div>
      <div id="mMythicResult"></div>
      <button id="mRollResultsReset" class="hidden">OK</button>
   </div>

   <h3>Titanic Action<a title="Wait... you're doing <em>what</em>?" class="accordianExplanation">?</a></h3>
   <div id="titanic">
      <label for="tStorm">Storm</label><br>
      <input id="tStorm" name="tStorm" type="number" min="0" inputmode="numeric" pattern="[0-9]*" /><br>
      <label for="tThunder">Thunder</label><br>
      <input id="tThunder" name="tThunder" type="number" min="0" inputmode="numeric" pattern="[0-9]*" /><br>
      <label for="tBThunder">bonus Thunder</label><br>
      <input id="tBThunder" name="tBThunder" type="number" min="0" inputmode="numeric" pattern="[0-9]*" /><br>
      <button id="tRoll">Roll</button>
      <div id="tStormResult"></div>
      <div id="tThunderResult"></div>
      <div id="tMythicResult"></div>
      <button id="tRollResultsReset" class="hidden">OK</button>
   </div>

   <h3>Wounding<a title="Uh-oh!" class="accordianExplanation">?</a></h3>
   <div id="wound">
      <label for="wno">Wound number</label><br>
      <input id="wno" name="wno" type="number" min="0" inputmode="numeric" pattern="[0-9]*" /><br>
      <label for="woundThunder">Thunder</label><br>
      <input id="woundThunder" name="woundThunder" type="number" min="0" inputmode="numeric" pattern="[0-9]*" /><br>
      <button id="woundRoll">Roll</button>
      <div id="woundRollResults"></div>
      <button id="wusebloodlust" class="hidden">Use Bloodlust</button><button id="wbloodlustwut" class="hidden">?</button><br>
      <button id="wusebloodlustq" class="hidden">Use Bloodlust - Quick</button><button id="wbloodlustqwut" class="hidden">?</button><br>
      <button id="wusebloodlustd" class="hidden">Use Bloodlust - Dangerous</button><button id="wbloodlustdwut" class="hidden">?</button><br>
      <button id="wusebloodlustdq" class="hidden">Use Bloodlust - Dangerous &amp; Quick</button><button id="wbloodlustdqwut" class="hidden">?</button><br>
      <button id="wuserelentlessnessu" class="hidden">Use Relentlessness - Unrepentant</button><button id="wrelentlessnessuwut" class="hidden">?</button><br>
      <button id="woundRollResultsReset" class="hidden">OK</button>
   </div>
   <h3>About</h3>
   <div id="about">
      <p>This site is copyright 2014 by Andrew Eakett</p>

      <p>This work is based on the Mythender Roleplaying Game, written and published by Ryan Macklin, and licensed for our use under the Creative Commons Attribution-NonCommercial 3.0 Unported license.</p>
   </div>
</div>





<script src="js/jquery-1.11.2.min.js"></script>
<script src="js/fastclick.js"></script>
<script src="js/jquery.noty.packaged.min.js"></script>
<script src="js/mythdice_theme.js"></script>
<script src="js/simpleStorage.js"></script>
<script src="js/jquery-ui.min.js"></script>
<script src="js/gifts.js"></script>
<script src="js/weapons.js"></script>
<script src="js/legendary.js"></script>
<script src="js/mythic.js"></script>
<script src="js/titanic.js"></script>

<script>
   $(function() {
      FastClick.attach(document.body);
   });

   $( "#accordion" ).accordion({heightStyle: "fill"});
   $( document ).tooltip();

   function roll() {
      return Math.floor((Math.random()*6)+1);
   }

   function loseThunder(num) {
      var n = noty({
         text        : '<span class="gainLosePay">lose '+num+' Thunder</span><img height="280" src="img/thunderDiceRing.svg">',
         type        : 'alert',
         maxVisible  : 1,
         dismissQueue: true,
         modal       : true,
         layout      : 'center',
         theme       : 'mythdice_theme',
         animation: {
            open: 'animated bounceInDown',
            close: 'animated bounceOutDown'
         }
      });
      saveThunder(parseInt(getThunder())-parseInt(num));
   }
   function gainThunder(num) {
      var n = noty({
         text        : '<span class="gainLosePay">gain '+num+' Thunder</span><img height="280" src="img/thunderDiceRing.svg">',
         type        : 'alert',
         maxVisible  : 1,
         dismissQueue: true,
         modal       : true,
         layout      : 'center',
         theme       : 'mythdice_theme',
         animation: {
            open: 'animated bounceInDown',
            close: 'animated bounceOutDown'
         }
      });
      saveThunder(parseInt(getThunder())+parseInt(num));
   }
   function payMight(num) {
      var n = noty({
         text        : '<span class="gainLosePay">pay '+num+' Might</span><img height="300" src="img/fist.svg">',
         type        : 'alert',
         maxVisible  : 1,
         dismissQueue: true,
         modal       : true,
         layout      : 'center',
         theme       : 'mythdice_theme',
         animation: {
            open: 'animated bounceInDown',
            close: 'animated bounceOutDown'
         }
      });
      saveMight(parseInt(getMight())-parseInt(num));
   }
   function gainMight(num) {
      var n = noty({
         text        : '<span class="gainLosePay">gain '+num+' Might</span><img height="300" src="img/fist.svg">',
         type        : 'alert',
         maxVisible  : 1,
         dismissQueue: true,
         modal       : true,
         layout      : 'center',
         theme       : 'mythdice_theme',
         animation: {
            open: 'animated bounceInDown',
            close: 'animated bounceOutDown'
         }
      });
      saveMight(parseInt(getMight())+parseInt(num));
   }
   function payLightning(num) {
      var n = noty({
         text        : '<span class="gainLosePay">pay '+num+' Lightning</span><img height="300" src="img/lightning.svg">',
         type        : 'alert',
         maxVisible  : 1,
         dismissQueue: true,
         modal       : true,
         layout      : 'center',
         theme       : 'mythdice_theme',
         animation: {
            open: 'animated bounceInDown',
            close: 'animated bounceOutDown'
         }
      });
      saveLightning(parseInt(getLightning())-parseInt(num));
   }
   function gainLightning(num) {
      var n = noty({
         text        : '<span class="gainLosePay">gain '+num+' Lightning</span><img height="300" src="img/lightning.svg">',
         type        : 'alert',
         maxVisible  : 1,
         dismissQueue: true,
         modal       : true,
         layout      : 'center',
         theme       : 'mythdice_theme',
         animation: {
            open: 'animated bounceInDown',
            close: 'animated bounceOutDown'
         }
      });
      saveLightning(parseInt(getLightning())+parseInt(num));
   }
   function gainStorm(num) {
      var n = noty({
         text        : '<span class="gainLosePay">gain '+num+' Storm Dice</span><img height="300" src="img/stormDiceRing.svg">',
         type        : 'alert',
         maxVisible  : 1,
         dismissQueue: true,
         modal       : true,
         layout      : 'center',
         theme       : 'mythdice_theme',
         animation: {
            open: 'animated bounceInDown',
            close: 'animated bounceOutDown'
         }
      });
      saveStorm(parseInt(getStorm())+parseInt(num));
   }
   function drawThunderDie(num) {
      return drawDie(num, 'thunder');
   }
   function drawStormDie(num) {
      return drawDie(num, 'storm');
   }
   function drawBonusThunderDie(num) {
      return drawDie(num, 'bonusThunder');
   }
   function drawBonusStormDie(num) {
      return drawDie(num, 'bonusStorm');
   }
   function drawThunderDie(num) {
      return drawDie(num, 'thunder');
   }
   function drawMythicDie(num) {
      return drawDie(num, 'mythic');
   }
   function drawDie(num, type) {
      var classPrefix=type;
      switch (type) {
      case 'thunder':
         var diePrefix = 't';
         break;
      case 'bonusThunder':
         var diePrefix = 'bt';
         break;
      case 'storm':
         var diePrefix = 's';
         break;
      case 'bonusStorm':
         var diePrefix = 'bs';
         break;
      case 'mythic':
         var diePrefix = 'm';
         break;
      }
      return '<img class="die '+classPrefix+'Die" src="img/'+diePrefix+'d'+num+'.svg" />';
   }

   function saveThunder(num) {
      simpleStorage.set('globalThunder', num);
      $('#woundThunder').val(num);
      $('#lThunder').val(num);
      $('#mThunder').val(num);
      $('#tThunder').val(num);
      $('#thunder').val(num);
   }

   function saveStorm(num) {
      simpleStorage.set('globalStorm', num);
      $('#lStorm').val(num);
      $('#mStorm').val(num);
      $('#tStorm').val(num);
      $('#storm').val(num);
   }

   function saveMight(num) {
      simpleStorage.set('globalMight', num);
      $('#might').val(num);
   }

   function saveLightning(num) {
      simpleStorage.set('globalLightning', num);
      $('#lightning').val(num);
   }

   function saveWoundCost(num) {
      simpleStorage.set('globalWoundCost', num);
      $('#woundCost').val(num);
   }

   function loadThunder() {
      var thunder=simpleStorage.get('globalThunder');
      if (thunder) {
         $('#woundThunder').val(thunder);
         $('#lThunder').val(thunder);
         $('#mThunder').val(thunder);
         $('#tThunder').val(thunder);
         $('#thunder').val(thunder);
      }
   }

   function loadStorm() {
      var storm=simpleStorage.get('globalStorm');
      if (storm) {
         $('#lStorm').val(storm);
         $('#mStorm').val(storm);
         $('#tStorm').val(storm);
         $('#storm').val(storm);
      }
   }

   function loadMight() {
      var might=simpleStorage.get('globalMight');
      if (!might) { might=0; }
      $('#might').val(might);
   }

   function loadLightning() {
      var lightning=simpleStorage.get('globalLightning');
      if (!lightning) { lightning=0; }
      $('#lightning').val(lightning);
   }

   function loadWoundCost() {
      var woundCost=simpleStorage.get('globalWoundCost');
      if (!woundCost) { woundCost=0; }
      $('#woundCost').val(woundCost);
   }



   function getMight() {
      return $('#might').val();
   }
   function getLightning() {
      return $('#lightning').val();
   }
   function getThunder() {
      return $('#thunder').val();
   }
   function getStorm() {
      return $('#storm').val();
   }
   function getWoundCost() {
      return $('#woundCost').val();
   }



   function hideWRelentlessnessU() {$('#wuserelentlessnessu, #wrelentlessnessuwut, #wrelentlessnessuwut + br').hide();}
   function hideWBloodlust() {$('#wusebloodlust, #wbloodlustwut, #wbloodlustwut + br').hide();}
   function hideWBloodlustQ() {$('#wusebloodlustq, #wbloodlustqwut, #wbloodlustqwut + br').hide();}
   function hideWBloodlustD() {$('#wusebloodlustd, #wbloodlustdwut, #wbloodlustdwut + br').hide();}
   function hideWBloodlustDQ() {$('#wusebloodlustdq, #wbloodlustdqwut, #wbloodlustdqwut + br').hide();}
   function showWRelentlessnessU() {$('#wuserelentlessnessu, #wrelentlessnessuwut, #wrelentlessnessuwut + br').show();}
   function showWBloodlust() {$('#wusebloodlust, #wbloodlustwut, #wbloodlustwut + br').show();}
   function showWBloodlustQ() {$('#wusebloodlustq, #wbloodlustqwut, #wbloodlustqwut + br').show();}
   function showWBloodlustD() {$('#wusebloodlustd, #wbloodlustdwut, #wbloodlustdwut + br').show();}
   function showWBloodlustDQ() {$('#wusebloodlustdq, #wbloodlustdqwut, #wbloodlustdqwut + br').show();}

   function init() {
      loadMight();
      loadThunder();
      loadStorm();
      loadLightning();
      loadWoundCost();
      window.gifts='';
      loadGifts();
      window.weapons='';
      loadWeapons();
      renderWeapons();
   }

   $( document ).ready(function() {
      init();
      $('#storm').change(function(){
         saveStorm($(this).val());
      });
      $('#thunder').change(function(){
         saveThunder($(this).val());
      });
      $('#might').change(function(){
         saveMight($(this).val());
      });
      $('#lightning').change(function(){
         saveLightning($(this).val());
      });
      $('#woundCost').change(function(){
         saveWoundCost($(this).val());
      });

      $('#woundRoll').click(function(){
         var discard=0;
         var effectiveno = $('#wno').val();
         for (var i=0; i < $('#woundThunder').val(); i++) {
            var result=roll();
            if (result >= effectiveno) {
               $('#woundRollResults').append('<span>'+drawThunderDie(result)+'</span>');
            } else {
               $('#woundRollResults').append('<span class="wfailed" date-result="'+result+'">'+drawThunderDie(result)+'</span>');
               discard++;
            }
         }
         // Deal with wound numbers greater than 6
         if (effectiveno > 6) {
            console.log('wound no. is greater than 6!');
            $('.wfailed[data-result="6"]').each(function(){
               console.log('processing a failed 6');
               if (effectiveno == 6) {
                  $(this).removeClass('wfailed');
                  discard--;
               } else {
                  effectiveno--;
               }
            });
         }
         $('#wno').attr('weffectiveno',effectiveno);


         $('#woundRollResults').append('<p id="wdiscard" data-discard="'+discard+'">discard '+discard+'</p>');
         if (discard > 0) {
            if (gifts['relentlessness']['has']) {showWRelentlessnessU();}
            if (gifts['bloodlust']['has']) {showWBloodlust();}
            if (gifts['bloodlust-quick']['has']) {showWBloodlustQ();}
            if (gifts['bloodlust-dangerous']['has']) {showWBloodlustD();}
            if (gifts['bloodlust-dangerous']['has'] && gifts['bloodlust-quick']['has']) {showWBloodlustDQ();}
         }
         $('#woundRollResultsReset, #woundRoll').toggle();
      });

      $('#woundRollResultsReset').click(function(){
         var prevThunder = $('#woundThunder').val();
         var discarding = $('#wdiscard').attr('data-discard');
         var newThunder = prevThunder - discarding;
         if (discarding > 0) {loseThunder(discarding);}
         saveThunder(newThunder);
         chargeCompanions();
         $('#woundRollResults').empty();
         $('#woundRollResultsReset, #woundRoll').toggle();
         hideWRelentlessnessU(); hideWBloodlust(); hideWBloodlustQ(); hideWBloodlustD(); hideWBloodlustDQ();
         $('#ui-id-1').click();
      });

      $('#wbloodlustwut').click(function(){
         var n = noty({
            text        : 'Pay 2 Might tokens when you’re Wounded and have lost Thunder dice. Gain Lightning tokens equal to the Thunder dice lost.\n\nIf a Mythender dies and comes back, all the Thunder dice lost before coming back count for this Gift.',
            type        : 'information',
            maxVisible  : 1,
            dismissQueue: true,
            layout      : 'center',
            theme       : 'mythdice_theme',
            animation: {
               open: 'animated zoomIn',
               close: 'animated zoomOut'
            }
         });
      });
      $('#wbloodlustdwut').click(function(){
         var n = noty({
            text        : 'Pay 5 Might tokens when you’re Wounded and have lost Thunder dice. Gain Lightning tokens equal to twice the Thunder dice lost.\n\nIf a Mythender dies and comes back, all the Thunder dice lost before coming back count for this Gift.',
            type        : 'information',
            maxVisible  : 1,
            dismissQueue: true,
            layout      : 'center',
            theme       : 'mythdice_theme',
            animation: {
               open: 'animated zoomIn',
               close: 'animated zoomOut'
            }
         });
      });
      $('#wbloodlustqwut').click(function(){
         var n = noty({
            text        : 'Pay 1 Might token when you’re Wounded and have lost Thunder dice. Gain Lightning tokens equal to the Thunder dice lost.\n\nIf a Mythender dies and comes back, all the Thunder dice lost before coming back count for this Gift.',
            type        : 'information',
            maxVisible  : 1,
            dismissQueue: true,
            layout      : 'center',
            theme       : 'mythdice_theme',
            animation: {
               open: 'animated zoomIn',
               close: 'animated zoomOut'
            }
         });
      });
      $('#wbloodlustdqwut').click(function(){
         var n = noty({
            text        : 'Pay 4 Might tokens when you’re Wounded and have lost Thunder dice. Gain Lightning tokens equal to twice the Thunder dice lost.\n\nIf a Mythender dies and comes back, all the Thunder dice lost before coming back count for this Gift.',
            type        : 'information',
            maxVisible  : 1,
            dismissQueue: true,
            layout      : 'center',
            theme       : 'mythdice_theme',
            animation: {
               open: 'animated zoomIn',
               close: 'animated zoomOut'
            }
         });
      });
      $('#wrelentlessnessuwut').click(function(){
         var n = noty({
            text        : 'Pay 3 Might tokens when Wounded. Reroll failed Thunder dice. Spend after rolling. Describe how you’re pushing harder to recover from a fumble.',
            type        : 'information',
            maxVisible  : 1,
            dismissQueue: true,
            layout      : 'center',
            theme       : 'mythdice_theme',
            animation: {
               open: 'animated zoomIn',
               close: 'animated zoomOut'
            }
         });
      });

      $('#wusebloodlust').click(function(){
         payMight(2);
         gainLightning($('#wdiscard').attr('data-discard'));
         hideWRelentlessnessU(); hideWBloodlust(); hideWBloodlustQ(); hideWBloodlustD(); hideWBloodlustDQ();
      });

      $('#wusebloodlustq').click(function(){
         payMight(1);
         gainLightning($('#wdiscard').attr('data-discard'));
         hideWRelentlessnessU(); hideWBloodlust(); hideWBloodlustQ(); hideWBloodlustD(); hideWBloodlustDQ();
      });

      $('#wusebloodlustd').click(function(){
         payMight(5);
         gainLightning($('#wdiscard').attr('data-discard')*2);
         hideWRelentlessnessU(); hideWBloodlust(); hideWBloodlustQ(); hideWBloodlustD(); hideWBloodlustDQ();
      });

      $('#wusebloodlustdq').click(function(){
         payMight(4);
         gainLightning($('#wdiscard').attr('data-discard')*2);
         hideWRelentlessnessU(); hideWBloodlust(); hideWBloodlustQ(); hideWBloodlustD(); hideWBloodlustDQ();
      });

      $('#wuserelentlessnessu').click(function(){
         // pony up
         payMight(3);
         // grab the number of rerolls we have to do
         var numRerolls=$('#wdiscard').attr('data-discard'); console.log('rerolling: '+numRerolls);
         // remove the old discard number
         $('#wdiscard').remove();
         // remove the rolls we're redoing
         $('.wfailed').remove();
         // make sure to describe the awesome
         var n = noty({
            text        : 'Describe how you’re pushing harder to recover from a fumble.',
            type        : 'information',
            maxVisible  : 1,
            dismissQueue: true,
            layout      : 'center',
            theme       : 'mythdice_theme',
            animation: {
               open: 'animated zoomIn',
               close: 'animated zoomOut'
            }
         });


         // do rerolls
         var discard=0;
         var effectiveno = $('#wno').attr('weffectiveno');
         console.log('effective number is: '+effectiveno);
         for (var i=0; i < numRerolls; i++) {
            var result=roll();
            if (result >= effectiveno) {
               $('#woundRollResults').append('<span>'+drawThunderDie(result)+'</span>');
            } else {
               $('#woundRollResults').append('<span class="wfailed" data-result="'+result+'">'+drawThunderDie(result)+'</span>');
               discard++;
            }
         }
         // Deal with wound numbers greater than 6
         if (effectiveno > 6) {
            console.log('Relentlessness: wound no. is greater than 6!');
            $('.wfailed[data-result="6"]').each(function(){
               console.log('processing a failed 6');
               if (effectiveno == 6) {console.log()
                  $(this).removeClass('wfailed');
                  discard--;
               } else {
                  effectiveno--;
                  console.log('effective number is: '+effectiveno);
               }
            });
         }
         $('#wno').attr('weffectiveno',effectiveno);


         $('#woundRollResults').append('<p id="wdiscard" data-discard="'+discard+'">discard '+discard+'</p>');
         
         // since we can't use the same gift twice, remove relentlessness
         hideWRelentlessnessU();
      });

      
   });


</script>
</body>
</html>











